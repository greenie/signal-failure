{
  "interactionModel": {
    "languageModel": {
      "invocationName": "signal failure",
      "intents": [
        {
          "name": "AMAZON.CancelIntent",
          "samples": []
        },
        {
          "name": "AMAZON.HelpIntent",
          "samples": []
        },
        {
          "name": "AMAZON.StopIntent",
          "samples": []
        },
        {
          "name": "GetLineDisruptionsIntent",
          "slots": [
            {
              "name": "Line",
              "type": "LineName",
              "samples": [
                "{Line}",
                "{Line} line",
                "the {Line}",
                "the {Line} line"
              ]
            },
            {
              "name": "Fault",
              "type": "FaultName"
            }
          ],
          "samples": [
            "are there {Fault} on {Line}",
            "is {Line} {Fault}",
            "if {Line} is {Fault}",
            "if there are {Fault} on {Line}",
            "does {Line} have {Fault}",
            "does {Line} line have {Fault}",
            "check {Line} for {Fault}",
            "check for {Fault} on {Line}",
            "to check {Line} for {Fault}",
            "to check for {Fault} on {Line}",
            "for the status of {Line}",
            "check the status of {Line}"
          ]
        },
        {
          "name": "GetTubeDisruptionsIntent",
          "slots": [
            {
              "name": "Mode",
              "type": "ModeName"
            },
            {
              "name": "Fault",
              "type": "FaultName"
            }
          ],
          "samples": [
            "are there {Fault} on {Mode}",
            "is {Mode} {Fault}",
            "if {Mode} is {Fault}",
            "if there are {Fault} on {Mode}",
            "does {Mode} have {Fault}",
            "check {Mode} for {Fault}",
            "check for {Fault} on {Mode}",
            "to check {Mode} for {Fault}",
            "to check for {Fault} on {Mode}",
            "for the status of {Mode}",
            "check the status of {Mode}"
          ]
        },
        {
          "name": "GetMultiLineDisruptionsIntent",
          "slots": [
            {
              "name": "LineA",
              "type": "LineName",
              "samples": [
                "the {LineA} line",
                "the {LineA}",
                "{LineA}"
              ]
            },
            {
              "name": "LineB",
              "type": "LineName",
              "samples": [
                "the {LineB} line",
                "the {LineB}",
                "{LineB}"
              ]
            },
            {
              "name": "LineC",
              "type": "LineName"
            },
            {
              "name": "Fault",
              "type": "FaultName"
            }
          ],
          "samples": [
            "are there {Fault} on {LineA} and {LineB}",
            "are there {Fault} on {LineA} and {LineB} and {LineC}",
            "is {LineA} and {LineB} {Fault}",
            "is {LineA} and {LineB} and {LineC} {Fault}",
            "if {LineA} and {LineB} is {Fault}",
            "if {LineA} and {LineB} and {LineC} is {Fault}",
            "if there are {Fault} on {LineA} and {LineB}",
            "if there are {Fault} on {LineA} and {LineB} and {LineC}",
            "does {LineA} and {LineB} have {Fault}",
            "does {LineA} and {LineB} and {LineC} have {Fault}",
            "check {LineA} and {LineB} for {Fault}",
            "check {LineA} and {LineB} and {LineC} for {Fault}",
            "check for {Fault} on {LineA} and {LineB}",
            "check for {Fault} on {LineA} and {LineB} and {LineC}",
            "to check {LineA} and {LineB} for {Fault}",
            "to check {LineA} and {LineB} and {LineC} for {Fault}",
            "to check for {Fault} on {LineA} and {LineB}",
            "to check for {Fault} on {LineA} and {LineB} and {LineC}",
            "for the status of {LineA} and {LineB}",
            "for the status of {LineA} and {LineB} and {LineC}",
            "check the status of {LineA} and {LineB}",
            "check the status of {LineA} and {LineB} and {LineC}"
          ]
        },
        {
          "name": "AMAZON.NavigateHomeIntent",
          "samples": []
        }
      ],
      "types": [
        {
          "values": [
            {
              "id": "delay",
              "name": {
                "value": "delay",
                "synonyms": [
                  "delays",
                  "delayed"
                ]
              }
            },
            {
              "id": "disruption",
              "name": {
                "value": "disruption",
                "synonyms": [
                  "disruptions",
                  "disrupted"
                ]
              }
            },
            {
              "id": "fault",
              "name": {
                "value": "fault",
                "synonyms": [
                  "faults",
                  "faulty"
                ]
              }
            }
          ],
          "name": "FaultName"
        },
        {
          "values": [
            {
              "id": "elizabeth",
              "name": {
                "value": "Elizabeth",
                "synonyms": [
                  "crossrail"
                ]
              }
            },
            {
              "id": "northern",
              "name": {
                "value": "Northern",
                "synonyms": [
                  "the northern line",
                  "northern line"
                ]
              }
            },
            {
              "id": "jubilee",
              "name": {
                "value": "Jubilee",
                "synonyms": [
                  "the jubilee line",
                  "jubilee line"
                ]
              }
            },
            {
              "id": "circle",
              "name": {
                "value": "Circle",
                "synonyms": [
                  "the circle line",
                  "circle line"
                ]
              }
            },
            {
              "id": "dlr",
              "name": {
                "value": "DLR",
                "synonyms": [
                  "the docklands light railway",
                  "the dealer",
                  "the dlr",
                  "docklands light railway",
                  "dealer"
                ]
              }
            },
            {
              "id": "hammersmith-city",
              "name": {
                "value": "Hammersmith and City",
                "synonyms": [
                  "the hammersmith cityline",
                  "the hammersmith city",
                  "the hammersmith and city line",
                  "the hammersmith city line",
                  "hammersmith city line",
                  "hammersmith and city line",
                  "hammersmith city",
                  "hammersmith cityline"
                ]
              }
            },
            {
              "id": "london-overground",
              "name": {
                "value": "Overground",
                "synonyms": [
                  "the overground",
                  "london overground"
                ]
              }
            },
            {
              "id": "waterloo-city",
              "name": {
                "value": "Waterloo and City",
                "synonyms": [
                  "the waterloo cityline",
                  "the waterloo city",
                  "the waterloo and city line",
                  "the waterloo city line",
                  "waterloo city line",
                  "waterloo and city line",
                  "waterloo city",
                  "waterloo cityline"
                ]
              }
            },
            {
              "id": "bakerloo",
              "name": {
                "value": "Bakerloo",
                "synonyms": [
                  "the bakerloo line",
                  "bakerloo line"
                ]
              }
            },
            {
              "id": "central",
              "name": {
                "value": "Central",
                "synonyms": [
                  "the central line",
                  "central line"
                ]
              }
            },
            {
              "id": "district",
              "name": {
                "value": "District",
                "synonyms": [
                  "the district line",
                  "district line"
                ]
              }
            },
            {
              "id": "metropolitan",
              "name": {
                "value": "Metropolitan",
                "synonyms": [
                  "the metropolitan line",
                  "metropolitan line"
                ]
              }
            },
            {
              "id": "piccadilly",
              "name": {
                "value": "Piccadilly",
                "synonyms": [
                  "the piccadilly line",
                  "piccadilly line"
                ]
              }
            },
            {
              "id": "victoria",
              "name": {
                "value": "Victoria",
                "synonyms": [
                  "the victoria line",
                  "victoria line"
                ]
              }
            },
            {
              "id": "tfl-rail",
              "name": {
                "value": "TfL Rail"
              }
            }
          ],
          "name": "LineName"
        },
        {
          "values": [
            {
              "id": "tube",
              "name": {
                "value": "Underground",
                "synonyms": [
                  "the underground",
                  "the tube",
                  "tube",
                  "london underground"
                ]
              }
            }
          ],
          "name": "ModeName"
        }
      ]
    },
    "dialog": {
      "intents": [
        {
          "name": "GetLineDisruptionsIntent",
          "confirmationRequired": false,
          "prompts": {},
          "slots": [
            {
              "name": "Line",
              "type": "LineName",
              "elicitationRequired": true,
              "confirmationRequired": false,
              "prompts": {
                "elicitation": "Elicit.Intent-GetLineDisruptionsIntent.IntentSlot-Line"
              },
              "validations": [
                {
                  "type": "hasEntityResolutionMatch",
                  "prompt": "Slot.Validation.142505324104.1108012046302.980056596686"
                }
              ]
            },
            {
              "name": "Fault",
              "type": "FaultName",
              "elicitationRequired": false,
              "confirmationRequired": false,
              "prompts": {}
            }
          ]
        },
        {
          "name": "GetMultiLineDisruptionsIntent",
          "confirmationRequired": false,
          "prompts": {},
          "slots": [
            {
              "name": "LineA",
              "type": "LineName",
              "elicitationRequired": true,
              "confirmationRequired": false,
              "prompts": {
                "elicitation": "Elicit.Slot.1084590486539.962116998631"
              },
              "validations": [
                {
                  "type": "hasEntityResolutionMatch",
                  "prompt": "Slot.Validation.20676453947.1528217077903.1025370553797"
                }
              ]
            },
            {
              "name": "LineB",
              "type": "LineName",
              "elicitationRequired": true,
              "confirmationRequired": false,
              "prompts": {
                "elicitation": "Elicit.Slot.1084590486539.1268287655934"
              },
              "validations": [
                {
                  "type": "hasEntityResolutionMatch",
                  "prompt": "Slot.Validation.20676453947.700081273546.304187770361"
                }
              ]
            },
            {
              "name": "LineC",
              "type": "LineName",
              "elicitationRequired": false,
              "confirmationRequired": false,
              "prompts": {},
              "validations": [
                {
                  "type": "hasEntityResolutionMatch",
                  "prompt": "Slot.Validation.20676453947.309896338442.333798321409"
                }
              ]
            },
            {
              "name": "Fault",
              "type": "FaultName",
              "elicitationRequired": false,
              "confirmationRequired": false,
              "prompts": {}
            }
          ]
        }
      ]
    },
    "prompts": [
      {
        "id": "Elicit.Intent-GetLineDisruptionsIntent.IntentSlot-Line",
        "variations": [
          {
            "type": "PlainText",
            "value": "Which line would you like me to check?"
          }
        ]
      },
      {
        "id": "Elicit.Slot.1084590486539.962116998631",
        "variations": [
          {
            "type": "PlainText",
            "value": "Which was the first line you'd like me to check?"
          }
        ]
      },
      {
        "id": "Elicit.Slot.1084590486539.1268287655934",
        "variations": [
          {
            "type": "PlainText",
            "value": "Which was the second line you'd like me to check?"
          }
        ]
      },
      {
        "id": "Slot.Validation.142505324104.1108012046302.980056596686",
        "variations": [
          {
            "type": "PlainText",
            "value": "Please say the name of the line again for me"
          }
        ]
      },
      {
        "id": "Slot.Validation.20676453947.1528217077903.1025370553797",
        "variations": [
          {
            "type": "PlainText",
            "value": "Please say the name of the first line again for me"
          }
        ]
      },
      {
        "id": "Slot.Validation.20676453947.700081273546.304187770361",
        "variations": [
          {
            "type": "PlainText",
            "value": "Please say the name of the second line again for me"
          }
        ]
      },
      {
        "id": "Slot.Validation.20676453947.309896338442.333798321409",
        "variations": [
          {
            "type": "PlainText",
            "value": "Please say the name of the third line again for me"
          }
        ]
      }
    ]
  }
}
